/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pizzeria;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wika
 */
public class Nowy_pracownik extends javax.swing.JFrame {

    Connection con;
    Statement stmtnp1, stmtnp2, stmtnp3, stmtnp4, stmtnp5;
    ResultSet resnp1, resnp2, resnp3, resnp4, resnp5;
    DefaultTableModel model;
    static Zamowienia zam;

    /**
     * Creates new form Nowy_pracownik
     */
    public Nowy_pracownik(Zamowienia zam) {
        this.zam = zam;
        initComponents();
        panel_pacownikow.setVisible(false);
        paneledycji.setVisible(false);
        model = (DefaultTableModel) tabelka_pracownikow.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        przyciskpowrot = new javax.swing.JButton();
        przegladaj_pracownikow = new javax.swing.JToggleButton();
        panel_pacownikow = new javax.swing.JPanel();
        paneledycji = new javax.swing.JPanel();
        napisnumertelefonu = new javax.swing.JLabel();
        napisadres = new javax.swing.JLabel();
        napishaslo = new javax.swing.JLabel();
        napispesel = new javax.swing.JLabel();
        napisemail = new javax.swing.JLabel();
        napisimie = new javax.swing.JLabel();
        napisstanowisko = new javax.swing.JLabel();
        napisnazwisko = new javax.swing.JLabel();
        poleadres = new javax.swing.JTextField();
        polepesel = new javax.swing.JTextField();
        poleemail = new javax.swing.JTextField();
        polenazwisko = new javax.swing.JTextField();
        poleimie = new javax.swing.JTextField();
        poletelefon = new javax.swing.JTextField();
        wybierzstanowisko = new javax.swing.JComboBox();
        polePasswordhaslo1 = new javax.swing.JPasswordField();
        przyciskwyczysc = new javax.swing.JButton();
        nadpis_pesel = new javax.swing.JLabel();
        nadpis_telefon = new javax.swing.JLabel();
        komunikat = new javax.swing.JLabel();
        przyciskzapisz = new javax.swing.JButton();
        anuluj = new javax.swing.JButton();
        polenr = new javax.swing.JTextField();
        napisnumer = new javax.swing.JLabel();
        kom = new javax.swing.JLabel();
        usun = new javax.swing.JButton();
        edytuj = new javax.swing.JButton();
        dodaj = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelka_pracownikow = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(900, 750));
        setMinimumSize(new java.awt.Dimension(900, 677));
        setPreferredSize(new java.awt.Dimension(1400, 740));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        przyciskpowrot.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        przyciskpowrot.setText("Powrót");
        przyciskpowrot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przyciskpowrotActionPerformed(evt);
            }
        });
        getContentPane().add(przyciskpowrot, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 170, 40));

        przegladaj_pracownikow.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        przegladaj_pracownikow.setText("Przeglądaj wszystkich pracowników");
        przegladaj_pracownikow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przegladaj_pracownikowActionPerformed(evt);
            }
        });
        getContentPane().add(przegladaj_pracownikow, new org.netbeans.lib.awtextra.AbsoluteConstraints(79, 11, 250, 40));

        panel_pacownikow.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        paneledycji.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        napisnumertelefonu.setText("Numer telefonu*");
        paneledycji.add(napisnumertelefonu, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 143, 25));

        napisadres.setText("Adres*");
        paneledycji.add(napisadres, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 143, 25));

        napishaslo.setText("Hasło*");
        paneledycji.add(napishaslo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 143, 27));

        napispesel.setText("Pesel*");
        paneledycji.add(napispesel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 143, 25));

        napisemail.setText("E-mail");
        paneledycji.add(napisemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 143, 25));

        napisimie.setText("Imię*");
        paneledycji.add(napisimie, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 143, 30));

        napisstanowisko.setText("Twoje stanowisko*");
        paneledycji.add(napisstanowisko, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 143, 25));

        napisnazwisko.setText("Nazwisko*");
        paneledycji.add(napisnazwisko, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 143, 27));
        paneledycji.add(poleadres, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 159, 30));

        polepesel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                polepeselActionPerformed(evt);
            }
        });
        paneledycji.add(polepesel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 250, 159, 30));
        paneledycji.add(poleemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 159, 30));
        paneledycji.add(polenazwisko, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 159, 27));

        poleimie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poleimieActionPerformed(evt);
            }
        });
        paneledycji.add(poleimie, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 159, 30));
        paneledycji.add(poletelefon, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, 159, 30));

        wybierzstanowisko.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Kierownik", "Pracownik", "Administrator" }));
        wybierzstanowisko.setToolTipText("");
        wybierzstanowisko.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wybierzstanowiskoActionPerformed(evt);
            }
        });
        paneledycji.add(wybierzstanowisko, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 160, 25));

        polePasswordhaslo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                polePasswordhaslo1ActionPerformed(evt);
            }
        });
        paneledycji.add(polePasswordhaslo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 159, 27));

        przyciskwyczysc.setText("Wyczyść");
        przyciskwyczysc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przyciskwyczyscActionPerformed(evt);
            }
        });
        paneledycji.add(przyciskwyczysc, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 30, 130, 50));

        nadpis_pesel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        paneledycji.add(nadpis_pesel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 240, 30));

        nadpis_telefon.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        paneledycji.add(nadpis_telefon, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 280, 30));

        komunikat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        paneledycji.add(komunikat, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 220, 560, 60));

        przyciskzapisz.setText("Zapisz");
        przyciskzapisz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przyciskzapiszActionPerformed(evt);
            }
        });
        paneledycji.add(przyciskzapisz, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 90, 130, 50));

        anuluj.setText("Anuluj");
        anuluj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anulujActionPerformed(evt);
            }
        });
        paneledycji.add(anuluj, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 150, 130, 50));

        polenr.setEnabled(false);
        paneledycji.add(polenr, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 160, 30));

        napisnumer.setText("Nr");
        paneledycji.add(napisnumer, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 50, 30));

        kom.setText("*-pola obowiązkowe do wypełnienia");
        paneledycji.add(kom, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, 280, 30));

        panel_pacownikow.add(paneledycji, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 265, 1190, 360));

        usun.setText("Usuń");
        usun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usunActionPerformed(evt);
            }
        });
        panel_pacownikow.add(usun, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 216, 124, 43));

        edytuj.setText("Edytuj");
        edytuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edytujActionPerformed(evt);
            }
        });
        panel_pacownikow.add(edytuj, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 216, 117, 43));

        dodaj.setText("Dodaj");
        dodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajActionPerformed(evt);
            }
        });
        panel_pacownikow.add(dodaj, new org.netbeans.lib.awtextra.AbsoluteConstraints(418, 216, 111, 43));

        tabelka_pracownikow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NR", "LOGIN", "HASŁO", "TELEFON", "ADRES", "PESEL", "STANOWISKO", "E-MAIL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelka_pracownikow);
        if (tabelka_pracownikow.getColumnModel().getColumnCount() > 0) {
            tabelka_pracownikow.getColumnModel().getColumn(0).setMinWidth(30);
            tabelka_pracownikow.getColumnModel().getColumn(0).setPreferredWidth(30);
            tabelka_pracownikow.getColumnModel().getColumn(0).setMaxWidth(30);
            tabelka_pracownikow.getColumnModel().getColumn(2).setMinWidth(100);
            tabelka_pracownikow.getColumnModel().getColumn(2).setPreferredWidth(100);
            tabelka_pracownikow.getColumnModel().getColumn(2).setMaxWidth(100);
            tabelka_pracownikow.getColumnModel().getColumn(3).setMinWidth(100);
            tabelka_pracownikow.getColumnModel().getColumn(3).setPreferredWidth(100);
            tabelka_pracownikow.getColumnModel().getColumn(3).setMaxWidth(100);
            tabelka_pracownikow.getColumnModel().getColumn(5).setMinWidth(120);
            tabelka_pracownikow.getColumnModel().getColumn(5).setPreferredWidth(120);
            tabelka_pracownikow.getColumnModel().getColumn(5).setMaxWidth(120);
        }

        panel_pacownikow.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1230, 200));

        getContentPane().add(panel_pacownikow, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1240, 730));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void przyciskpowrotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przyciskpowrotActionPerformed
        zam.setVisible(true);
        dispose();
    }//GEN-LAST:event_przyciskpowrotActionPerformed

    private void przyciskzapiszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przyciskzapiszActionPerformed
        komunikat.setText("");
        nadpis_pesel.setText("");
        nadpis_telefon.setText("");
        String HASLO = polenazwisko.getText() + ' ' + poleimie.getText();
        String haslo = polePasswordhaslo1.getText();
        int numer = tabelka_pracownikow.getRowCount() + 1;
        String TELEFON = poletelefon.getText();
        String ADRES = poleadres.getText();
        String PESEL = polepesel.getText();
        String STANOWISKO = wybierzstanowisko.getSelectedItem().toString();
        String EMAIL = poleemail.getText();
        boolean bledy = false;
        int licznikbledow = 0;
        if (bledy == false) {
            if (TELEFON.length() == 0 || haslo.equals("") || polenazwisko.getText().equals("") || poleimie.getText().equals("")
                    || ADRES.equals("") || STANOWISKO.equals("") || PESEL.length() == 0) {
                komunikat.setText("Brak danych!");
                komunikat.setForeground(Color.red);
                licznikbledow++;
            }
            int j = 0;
            boolean TylkoLiczbyTelefon = true;
            while ((TylkoLiczbyTelefon == true) && (j < TELEFON.length())) {
                if ((TELEFON.charAt(j) < '0') || (TELEFON.charAt(j) > '9')) {
                    TylkoLiczbyTelefon = false;
                    nadpis_telefon.setText("Telefon powinien zawierać 9 cyfr");
                    nadpis_telefon.setForeground(Color.red);
                    licznikbledow++;
                }
                j++;
            }
            if (TELEFON.length() != 0 && TELEFON.length() != 9) {
                nadpis_telefon.setText("Telefon powinien zawierać 9 cyfr");
                nadpis_telefon.setForeground(Color.red);
                licznikbledow++;
            }
            int i = 0;
            boolean TylkoLiczbyPesel = true;
            while ((TylkoLiczbyPesel == true) && (i < PESEL.length())) {
                if ((PESEL.charAt(i) < '0') || (PESEL.charAt(i) > '9')) {
                    TylkoLiczbyPesel = false;
                    nadpis_pesel.setText("Pesel powinien zawierać 11 cyfr");
                    nadpis_pesel.setForeground(Color.red);
                    licznikbledow++;
                }
                ++i;
            }
            if (PESEL.length() != 0 && PESEL.length() != 11) {
                nadpis_pesel.setText("Pesel powinien zawierać 11 cyfr");
                nadpis_pesel.setForeground(Color.red);
                licznikbledow++;
            }
        }
        if (licznikbledow == 0) {
            try {
                con = DriverManager.getConnection(
                        "jdbc:derby://localhost:1527/BazaPizzerii", "pizzeria", "pizzeria"
                );
                stmtnp1 = con.createStatement();
                resnp1 = stmtnp1.executeQuery(
                        "select * from PRACOWNICY"
                );
                String insert = "";
                if (tabelka_pracownikow.getSelectedRow() < 0) {
                    insert = "INSERT INTO PIZZERIA.PRACOWNICY (ID_PRAC, LOGIN, HASLO, TELEFON, ADRES, PESEL, STANOWISKO, EMAIL) \n"
                            + "	VALUES (" + id() + ",'" + HASLO + "', '" + haslo + "', " + TELEFON + ", '" + ADRES + "', " + PESEL + ", '" + STANOWISKO + "', '" + EMAIL + "')";
                    stmtnp1.executeUpdate(insert);
                    numer++;
                    polenr.setText(numer + "");
                } else {
                    int wiersz = tabelka_pracownikow.getSelectedRow();
                    String s = tabelka_pracownikow.getValueAt(wiersz, 0).toString();
                    insert = "UPDATE PIZZERIA.PRACOWNICY SET LOGIN='" + HASLO + "', haslo='" + haslo + "', telefon=" + TELEFON
                            + ", ADRES='" + ADRES + "', PESEL=" + PESEL + ", STANOWISKO='" + STANOWISKO + "', EMAIL='" + EMAIL + "' WHERE id_prac=" + s;
                    stmtnp1.executeUpdate(insert);
                }
                wyczyscdane();
                komunikat.setText("Nowy pracownik został dodany do bazy systemu");
                komunikat.setForeground(Color.DARK_GRAY);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Błąd zapisu");
            }
            czysctabelke();
            przegladaj(model);
        }
    }//GEN-LAST:event_przyciskzapiszActionPerformed

    private void polePasswordhaslo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_polePasswordhaslo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_polePasswordhaslo1ActionPerformed

    private void polepeselActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_polepeselActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_polepeselActionPerformed

    private void przyciskwyczyscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przyciskwyczyscActionPerformed
        wyczyscdane();
    }//GEN-LAST:event_przyciskwyczyscActionPerformed

    private void wybierzstanowiskoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wybierzstanowiskoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wybierzstanowiskoActionPerformed

    private void poleimieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poleimieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_poleimieActionPerformed

    private void przegladaj_pracownikowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przegladaj_pracownikowActionPerformed
        if (przegladaj_pracownikow.isSelected() == true) {

            panel_pacownikow.setVisible(true);
            paneledycji.setVisible(false);
            czysctabelke();
            przegladaj(model);
        } else {
            panel_pacownikow.setVisible(false);

        }
    }//GEN-LAST:event_przegladaj_pracownikowActionPerformed

    private void anulujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anulujActionPerformed
        wyczyscdane();
        paneledycji.setVisible(false);
    }//GEN-LAST:event_anulujActionPerformed

    private void usunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usunActionPerformed
        int j = tabelka_pracownikow.getRowCount();
        String ostt = tabelka_pracownikow.getValueAt(j - 1, 0).toString();
        int ost = Integer.parseInt(ostt);
        if (tabelka_pracownikow.getSelectedRowCount() > 0) {
            int wiersz = tabelka_pracownikow.getSelectedRow();
            String s = tabelka_pracownikow.getValueAt(wiersz, 0).toString();
            String usunwiersz = "delete from pizzeria.pracownicy where id_prac=" + s;
            try {
                con = DriverManager.getConnection(
                        "jdbc:derby://localhost:1527/BazaPizzerii", "pizzeria", "pizzeria"
                );
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Brak połączenia z bazą danych");
            }
            try {
                stmtnp5 = con.createStatement();
                stmtnp5.executeUpdate(usunwiersz);
                int id1 = Integer.parseInt(s);
                id1++;
                for (int i = id1; i <= ost; i++) {
                    String naprawid = "UPDATE pracownicy SET id_prac =" + (i - 1) + " WHERE id_prac =" + i;
                    stmtnp5.executeUpdate(naprawid);
                }

            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Brak połączenia z bazą danych");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nie wybrano wiersza!");
        }
        czysctabelke();
        przegladaj(model);

    }//GEN-LAST:event_usunActionPerformed

    private void edytujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edytujActionPerformed
        wyczyscdane();
        if (tabelka_pracownikow.getSelectedRowCount() > 0) {
            paneledycji.setVisible(true);
            int numer = tabelka_pracownikow.getSelectedRow() + 1;
            polenr.setText(numer + "");
        } else {
            JOptionPane.showMessageDialog(null, "Nie wybrano wiersza!");
        }
    }//GEN-LAST:event_edytujActionPerformed

    private void dodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajActionPerformed
        wyczyscdane();
        paneledycji.setVisible(true);
        int numer = tabelka_pracownikow.getRowCount() + 1;
        polenr.setText(numer + "");
    }//GEN-LAST:event_dodajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Nowy_pracownik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Nowy_pracownik(zam).setVisible(true);
            }
        });
    }

    void wyczyscdane() {
        polenazwisko.setText("");
        poleimie.setText("");
        polePasswordhaslo1.setText("");
        poletelefon.setText("");
        poleadres.setText("");
        polepesel.setText("");
        wybierzstanowisko.setSelectedIndex(0);
        poleemail.setText("");
        komunikat.setText("");
        nadpis_pesel.setText("");
        nadpis_telefon.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anuluj;
    private javax.swing.JButton dodaj;
    private javax.swing.JButton edytuj;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel kom;
    private javax.swing.JLabel komunikat;
    private javax.swing.JLabel nadpis_pesel;
    private javax.swing.JLabel nadpis_telefon;
    private javax.swing.JLabel napisadres;
    private javax.swing.JLabel napisemail;
    private javax.swing.JLabel napishaslo;
    private javax.swing.JLabel napisimie;
    private javax.swing.JLabel napisnazwisko;
    private javax.swing.JLabel napisnumer;
    private javax.swing.JLabel napisnumertelefonu;
    private javax.swing.JLabel napispesel;
    private javax.swing.JLabel napisstanowisko;
    private javax.swing.JPanel panel_pacownikow;
    private javax.swing.JPanel paneledycji;
    private javax.swing.JPasswordField polePasswordhaslo1;
    private javax.swing.JTextField poleadres;
    private javax.swing.JTextField poleemail;
    private javax.swing.JTextField poleimie;
    private javax.swing.JTextField polenazwisko;
    private javax.swing.JTextField polenr;
    private javax.swing.JTextField polepesel;
    private javax.swing.JTextField poletelefon;
    private javax.swing.JToggleButton przegladaj_pracownikow;
    private javax.swing.JButton przyciskpowrot;
    private javax.swing.JButton przyciskwyczysc;
    private javax.swing.JButton przyciskzapisz;
    private javax.swing.JTable tabelka_pracownikow;
    private javax.swing.JButton usun;
    private javax.swing.JComboBox wybierzstanowisko;
    // End of variables declaration//GEN-END:variables
    void przegladaj(DefaultTableModel model) {
        try {
            con = DriverManager.getConnection(
                    "jdbc:derby://localhost:1527/BazaPizzerii", "pizzeria", "pizzeria"
            );
            stmtnp3 = con.createStatement();
            resnp3 = stmtnp3.executeQuery(
                    "select * from PRACOWNICY"
            );
            stmtnp4 = con.createStatement();
            resnp4 = stmtnp4.executeQuery(
                    "select count(*) from PRACOWNICY "
            );
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Brak połączenia z bazą danych");
        }
        try {
            while (resnp3.next()) {
                int nr = resnp3.getInt("id_prac");
                String login = resnp3.getString("login");
                String haslo = resnp3.getString("haslo");
                long telefon = resnp3.getLong("telefon");
                String adres = resnp3.getString("adres");
                long pesel = resnp3.getLong("pesel");
                String stanowisko = resnp3.getString("stanowisko");
                String email = resnp3.getString("email");
                Object[] row = {nr, login, haslo, telefon, adres, pesel, stanowisko, email};
                model.addRow(row);

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Brak połączenia z bazą danych");
        }
        tabelka_pracownikow.setModel(model);

    }

    void czysctabelke() {
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }

    public long id() {
        try {
            con = DriverManager.getConnection(
                    "jdbc:derby://localhost:1527/BazaPizzerii", "pizzeria", "pizzeria"
            );
            stmtnp2 = con.createStatement();
            resnp2 = stmtnp2.executeQuery(
                    "select id_prac from PRACOWNICY"
            );
        } catch (Exception e) {

        }
        String id = "0";
        try {
            while (resnp2.next()) {
                id = resnp2.getString("id_prac");

            }
        } catch (SQLException ex) {
        }
        long id_nast = Long.parseLong(id) + 1;
        return id_nast;
    }
}
