/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pizzeria;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static pizzeria.Nowy_pracownik.zam;

/**
 *
 * @author SK
 */
public class Edycja_pizzy extends javax.swing.JFrame {

    Connection con;
    Statement stmt1, stmt2, stmt3, stmt4, stmt5, stmt6, stmt7, stmt8;
    ResultSet res1, res2, res3, res4, res5, res6, res7, res8;
    DefaultTableModel model;
    DefaultListModel<String> model1 = new DefaultListModel<>();
    float cena = 0;
    static Zamowienia zam;

    /**
     * Creates new form Edycja_pizzy
     */
    public Edycja_pizzy(Zamowienia zam) {
        this.zam = zam;
        initComponents();
        panel_tabelka.setVisible(false);
        paneledytujdodaj.setVisible(false);
        pole_dost_nowa.setVisible(false);
        pole_ciasto_nowe.setVisible(false);
        pole_rozm_nowy.setVisible(false);
        model = (DefaultTableModel) tabelka.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        przegladaj = new javax.swing.JToggleButton();
        panel_tabelka = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelka = new javax.swing.JTable();
        paneledytujdodaj = new javax.swing.JPanel();
        POLENR = new javax.swing.JTextField();
        NUMER = new javax.swing.JLabel();
        CIASTO = new javax.swing.JLabel();
        DOSTEPNOSC = new javax.swing.JLabel();
        POLECENA = new javax.swing.JTextField();
        SKLADNIKI = new javax.swing.JLabel();
        POLENAZWA = new javax.swing.JTextField();
        NAZWA = new javax.swing.JLabel();
        CENA = new javax.swing.JLabel();
        ROZMIAR = new javax.swing.JLabel();
        zapisz = new javax.swing.JButton();
        anuluj = new javax.swing.JButton();
        POLECIASTO = new javax.swing.JComboBox();
        POLEROZMIAR = new javax.swing.JComboBox();
        POLEDOST = new javax.swing.JComboBox();
        komunikat = new javax.swing.JLabel();
        nowa_opcja_dostepnosc = new javax.swing.JToggleButton();
        nowa_opcja_rozmiar = new javax.swing.JToggleButton();
        nowa_opcja_ciasto = new javax.swing.JToggleButton();
        pole_dost_nowa = new javax.swing.JTextField();
        pole_rozm_nowy = new javax.swing.JTextField();
        pole_ciasto_nowe = new javax.swing.JTextField();
        combobox_skladniki = new javax.swing.JComboBox();
        dodajw = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista_skladnikow = new javax.swing.JList();
        usunw = new javax.swing.JButton();
        wyczysc = new javax.swing.JButton();
        edytuj = new javax.swing.JButton();
        usun = new javax.swing.JButton();
        dodajdobazy = new javax.swing.JButton();
        powrot = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1239, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        przegladaj.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        przegladaj.setText("Przeglądaj menu");
        przegladaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przegladajActionPerformed(evt);
            }
        });
        getContentPane().add(przegladaj, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 11, 260, 60));

        panel_tabelka.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelka.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NR", "NAZWA", "SKŁADNIKI", "CIASTO", "ROZMIAR", "CENA", "DOSTĘPNOŚĆ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelka);
        if (tabelka.getColumnModel().getColumnCount() > 0) {
            tabelka.getColumnModel().getColumn(0).setMinWidth(30);
            tabelka.getColumnModel().getColumn(0).setPreferredWidth(30);
            tabelka.getColumnModel().getColumn(0).setMaxWidth(30);
            tabelka.getColumnModel().getColumn(1).setPreferredWidth(40);
            tabelka.getColumnModel().getColumn(2).setPreferredWidth(400);
            tabelka.getColumnModel().getColumn(2).setMaxWidth(400);
            tabelka.getColumnModel().getColumn(3).setPreferredWidth(30);
            tabelka.getColumnModel().getColumn(4).setPreferredWidth(30);
            tabelka.getColumnModel().getColumn(5).setPreferredWidth(30);
            tabelka.getColumnModel().getColumn(6).setPreferredWidth(30);
        }

        panel_tabelka.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1199, 280));

        paneledytujdodaj.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        POLENR.setEditable(false);
        POLENR.setPreferredSize(new java.awt.Dimension(10, 25));
        POLENR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                POLENRActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(POLENR, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 77, 30));

        NUMER.setText("NR");
        paneledytujdodaj.add(NUMER, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 22, -1));

        CIASTO.setText("CIASTO");
        paneledytujdodaj.add(CIASTO, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, -1));

        DOSTEPNOSC.setText("DOSTĘPNOŚĆ");
        paneledytujdodaj.add(DOSTEPNOSC, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        POLECENA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                POLECENAActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(POLECENA, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 96, 30));

        SKLADNIKI.setText("SKŁADNIKI");
        paneledytujdodaj.add(SKLADNIKI, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, -1, -1));

        POLENAZWA.setPreferredSize(new java.awt.Dimension(10, 25));
        paneledytujdodaj.add(POLENAZWA, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 94, 30));

        NAZWA.setText("NAZWA");
        paneledytujdodaj.add(NAZWA, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        CENA.setText("CENA (ZŁ)");
        paneledytujdodaj.add(CENA, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, -1, -1));

        ROZMIAR.setText("ROZMIAR");
        paneledytujdodaj.add(ROZMIAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 10, -1, -1));

        zapisz.setText("Zapisz");
        zapisz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zapiszActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(zapisz, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 80, 127, 59));

        anuluj.setText("Anuluj");
        anuluj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anulujActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(anuluj, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 150, 130, 59));

        POLECIASTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                POLECIASTOActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(POLECIASTO, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, 100, 30));

        paneledytujdodaj.add(POLEROZMIAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, 100, 30));

        POLEDOST.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                POLEDOSTActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(POLEDOST, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 30, 100, 30));

        komunikat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        paneledytujdodaj.add(komunikat, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 520, 70));

        nowa_opcja_dostepnosc.setText("Nowa opcja");
        nowa_opcja_dostepnosc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nowa_opcja_dostepnoscActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(nowa_opcja_dostepnosc, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 70, 100, -1));

        nowa_opcja_rozmiar.setText("Nowa opcja");
        nowa_opcja_rozmiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nowa_opcja_rozmiarActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(nowa_opcja_rozmiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, 100, -1));

        nowa_opcja_ciasto.setText("Nowa opcja");
        nowa_opcja_ciasto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nowa_opcja_ciastoActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(nowa_opcja_ciasto, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 100, -1));
        paneledytujdodaj.add(pole_dost_nowa, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 100, 100, 30));
        paneledytujdodaj.add(pole_rozm_nowy, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, 100, 30));
        paneledytujdodaj.add(pole_ciasto_nowe, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 100, 30));

        combobox_skladniki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_skladnikiActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(combobox_skladniki, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 120, 30));

        dodajw.setText("Dodaj");
        dodajw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajwActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(dodajw, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 120, -1));

        jScrollPane2.setViewportView(lista_skladnikow);

        paneledytujdodaj.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 120, 110));

        usunw.setText("Usuń");
        usunw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usunwActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(usunw, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 120, -1));

        wyczysc.setText("Wyczyść");
        wyczysc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wyczyscActionPerformed(evt);
            }
        });
        paneledytujdodaj.add(wyczysc, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 10, 130, 60));

        panel_tabelka.add(paneledytujdodaj, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 1230, 250));

        edytuj.setText("Edytuj");
        edytuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edytujActionPerformed(evt);
            }
        });
        panel_tabelka.add(edytuj, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 120, 50));

        usun.setText("Usuń");
        usun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usunActionPerformed(evt);
            }
        });
        panel_tabelka.add(usun, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 290, 120, 50));

        dodajdobazy.setText("Dodaj");
        dodajdobazy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajdobazyActionPerformed(evt);
            }
        });
        panel_tabelka.add(dodajdobazy, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 290, 110, 50));

        getContentPane().add(panel_tabelka, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 1250, 610));

        powrot.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        powrot.setText("Powrót");
        powrot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powrotActionPerformed(evt);
            }
        });
        getContentPane().add(powrot, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 190, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void przegladajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przegladajActionPerformed
        if (przegladaj.isSelected() == true) {
            paneledytujdodaj.setVisible(false);
            panel_tabelka.setVisible(true);
            czysctabelke();
            przegladaj(model);
        } else {
            panel_tabelka.setVisible(false);
        }
    }//GEN-LAST:event_przegladajActionPerformed

    private void dodajdobazyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajdobazyActionPerformed
       wyczyscdane();
        paneledytujdodaj.setVisible(true);
        int numer = tabelka.getRowCount() + 1;
        POLENR.setText(numer + "");
        uzupelnijlisty();
    }//GEN-LAST:event_dodajdobazyActionPerformed

    private void edytujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edytujActionPerformed
        if (tabelka.getSelectedRowCount() > 0) {
            paneledytujdodaj.setVisible(true);
            wyczyscdane();
            int wybrwiersz = tabelka.getSelectedRow();
            int numer = Integer.parseInt(tabelka.getValueAt(wybrwiersz, 0).toString());
            POLENR.setText(numer + "");
            uzupelnijlisty();
        } else {
            JOptionPane.showMessageDialog(null, "Nie wybrano wiersza!");
        }
    }//GEN-LAST:event_edytujActionPerformed

    private void usunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usunActionPerformed

        int j = tabelka.getRowCount();
        String ostt = tabelka.getValueAt(j - 1, 0).toString();
        int ost = Integer.parseInt(ostt);
        if (tabelka.getSelectedRowCount() > 0) {
            int wiersz = tabelka.getSelectedRow();
            String s = tabelka.getValueAt(wiersz, 0).toString();
            String usunwiersz = "delete from pizzeria.menu_pizza where id_pizzy=" + s;
            try {
                con = DriverManager.getConnection(
                        "jdbc:derby://localhost:1527/BazaPizzerii", "pizzeria", "pizzeria"
                );
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Brak połączenia z bazą danych");
            }
            try {
                stmt5 = con.createStatement();
                stmt5.executeUpdate(usunwiersz);
                int id1 = Integer.parseInt(s);
                id1++;
                for (int i = id1; i <= ost; i++) {
                    String naprawid = "UPDATE menu_pizza SET id_pizzy =" + (i - 1) + " WHERE id_pizzy =" + i;
                    stmt5.executeUpdate(naprawid);
                }
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Brak połączenia z bazą danych");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nie wybrano wiersza!");//zmienilam
        }
        czysctabelke();
        przegladaj(model);
    }//GEN-LAST:event_usunActionPerformed

    private void anulujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anulujActionPerformed
        wyczyscdane();
        paneledytujdodaj.setVisible(false);
    }//GEN-LAST:event_anulujActionPerformed

    private void zapiszActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zapiszActionPerformed
        komunikat.setText("");
        int numer = tabelka.getRowCount() + 1;
        String nazwa = POLENAZWA.getText();
        String skladniki = pobierzwybraneskladniki();
        String ciasto;
        if (nowa_opcja_ciasto.isSelected()) {
            ciasto = pole_ciasto_nowe.getText();
        } else {
            ciasto = POLECIASTO.getSelectedItem().toString();
        }
        String rozmiar;
        if (nowa_opcja_rozmiar.isSelected()) {
            rozmiar = pole_rozm_nowy.getText();
        } else {
            rozmiar = POLEROZMIAR.getSelectedItem().toString();
        }
        if (POLECENA.getText() != null && POLECENA.getText().length() > 0) {
            try {
                cena = Float.parseFloat(POLECENA.getText());
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Niepoprawny format ceny!");
            }
        }
        String dostepnosc;
        if (nowa_opcja_dostepnosc.isSelected()) {
            dostepnosc = pole_dost_nowa.getText();
        } else {
            dostepnosc = POLEDOST.getSelectedItem().toString();
        }
        if (nazwa.equals("") || skladniki.equals("") || ciasto.equals("") || cena == 0 || rozmiar.equals("") || dostepnosc.equals("")) {
            komunikat.setText("Brak  danych!");
            komunikat.setForeground(Color.red);

        } else {
            try {
                con = DriverManager.getConnection(
                        "jdbc:derby://localhost:1527/BazaPizzerii", "pizzeria", "pizzeria"
                );
                stmt3 = con.createStatement();
                String insert = "";
                if (tabelka.getSelectedRow() < 0) {
                    insert = "INSERT INTO MENU_PIZZA VALUES(" + numer + ",'" + nazwa + "','" + skladniki + "','" + ciasto + "','" + rozmiar + "'," + cena + ",'" + dostepnosc + "')";
                    stmt3.executeUpdate(insert);
                    numer++;
                    POLENR.setText(numer + "");
                } else {

                    int wiersz = tabelka.getSelectedRow();
                    String s = tabelka.getValueAt(wiersz, 0).toString();

                    insert = "UPDATE menu_pizza SET nazwa='" + nazwa + "', skladniki='" + skladniki + "', ciasto='" + ciasto
                            + "', rozmiar='" + rozmiar + "', cena_pizza=" + cena + ", dostepnosc='" + dostepnosc + "' WHERE id_pizzy=" + s;
                    stmt3.executeUpdate(insert);
                }
                wyczyscdane();
                komunikat.setText("Nowa pizza została dodana do bazy systemu");
                komunikat.setForeground(Color.DARK_GRAY);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Błąd zapisu!");
            }
            czysctabelke();
            przegladaj(model);
        }
    }//GEN-LAST:event_zapiszActionPerformed

    private void POLENRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_POLENRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_POLENRActionPerformed

    private void powrotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powrotActionPerformed
        zam.setVisible(true);
        dispose();
    }//GEN-LAST:event_powrotActionPerformed

    private void POLECENAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_POLECENAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_POLECENAActionPerformed

    private void nowa_opcja_ciastoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nowa_opcja_ciastoActionPerformed
        if (nowa_opcja_ciasto.isSelected() == true) {
            pole_ciasto_nowe.setVisible(true);
            POLECIASTO.setEnabled(false);
            POLECIASTO.setSelectedIndex(0);
        } else {
            pole_ciasto_nowe.setVisible(false);
            POLECIASTO.setEnabled(true);
            pole_ciasto_nowe.setText("");
        }
    }//GEN-LAST:event_nowa_opcja_ciastoActionPerformed

    private void nowa_opcja_dostepnoscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nowa_opcja_dostepnoscActionPerformed
        if (nowa_opcja_dostepnosc.isSelected() == true) {
            pole_dost_nowa.setVisible(true);
            POLEDOST.setEnabled(false);
            POLEDOST.setSelectedIndex(0);
        } else {
            pole_dost_nowa.setVisible(false);
            POLEDOST.setEnabled(true);
            pole_dost_nowa.setText("");
        }
    }//GEN-LAST:event_nowa_opcja_dostepnoscActionPerformed

    private void POLEDOSTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_POLEDOSTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_POLEDOSTActionPerformed

    private void nowa_opcja_rozmiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nowa_opcja_rozmiarActionPerformed
        if (nowa_opcja_rozmiar.isSelected() == true) {
            pole_rozm_nowy.setVisible(true);
            POLEROZMIAR.setEnabled(false);
            POLEROZMIAR.setSelectedIndex(0);
        } else {
            pole_rozm_nowy.setVisible(false);
            POLEROZMIAR.setEnabled(true);
        }
    }//GEN-LAST:event_nowa_opcja_rozmiarActionPerformed

    private void POLECIASTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_POLECIASTOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_POLECIASTOActionPerformed

    private void dodajwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajwActionPerformed

        int i = model1.getSize();
        if (combobox_skladniki.getSelectedIndex() != -1) {
            String wybr = combobox_skladniki.getSelectedItem().toString();
            model1.add(i, wybr);
        } else {
            model1.add(i, " ");
        }
        lista_skladnikow.setModel(model1);
    }//GEN-LAST:event_dodajwActionPerformed

    private void usunwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usunwActionPerformed
        if (!lista_skladnikow.isSelectionEmpty()) {
            int index = lista_skladnikow.getSelectedIndex();
            model1.removeElementAt(index);
            lista_skladnikow.setModel(model1);
        }
    }//GEN-LAST:event_usunwActionPerformed

    private void combobox_skladnikiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_skladnikiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combobox_skladnikiActionPerformed

    private void wyczyscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wyczyscActionPerformed
        wyczyscdane();
        uzupelnijlisty();
    }//GEN-LAST:event_wyczyscActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Edycja_pizzy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Edycja_pizzy(zam).setVisible(true);
            }
        });
    }

    void przegladaj(DefaultTableModel model) {
        try {
            con = DriverManager.getConnection(
                    "jdbc:derby://localhost:1527/BazaPizzerii", "pizzeria", "pizzeria"
            );
            stmt1 = con.createStatement();
            res1 = stmt1.executeQuery(
                    "select * from MENU_PIZZA order by id_pizzy"
            );
            stmt2 = con.createStatement();
            res2 = stmt2.executeQuery(
                    "select count(*) from MENU_PIZZA "
            );
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Brak połączenia z bazą danych");
        }
        try {
            while (res1.next()) {
                int nr = res1.getInt("id_pizzy");
                String nazwa = res1.getString("nazwa");
                String skladniki = res1.getString("skladniki");
                String ciasto = res1.getString("ciasto");
                String rozmiar = res1.getString("rozmiar");
                String cena = res1.getDouble("cena_pizza") + " zł";
                String dostepnosc = res1.getString("dostepnosc");
                Object[] row = {nr, nazwa, skladniki, ciasto, rozmiar, cena, dostepnosc};
                model.addRow(row);
            }
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, "Brak połączenia z bazą danych");
        }
        tabelka.setModel(model);
    }
    void czysctabelke() {
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }

    String pobierzwybraneskladniki() {
        String skladniki = "";
        int i = model1.getSize();
        for (int j = 0; j < i; j++) {

            lista_skladnikow.setSelectedIndex(j);
            skladniki = skladniki + lista_skladnikow.getSelectedValue().toString();
            if (j == i - 1) {

            } else {
                skladniki = skladniki + ", ";
            }
        }
        return skladniki;
    }

    void uzupelnijlisty() {
        combobox_skladniki.removeAllItems();
        POLEROZMIAR.removeAllItems();
        POLEDOST.removeAllItems();
        POLECIASTO.removeAllItems();
        try {
            con = DriverManager.getConnection(
                    "jdbc:derby://localhost:1527/BazaPizzerii", "pizzeria", "pizzeria"
            );
            stmt4 = con.createStatement();
            res4 = stmt4.executeQuery(
                    "select * from SKLADNIKI"
            );
            stmt6 = con.createStatement();
            res6 = stmt6.executeQuery(
                    "select distinct(ciasto) from MENU_PIZZA"
            );
            stmt7 = con.createStatement();
            res7 = stmt7.executeQuery(
                    "select distinct(rozmiar) from MENU_PIZZA"
            );
            stmt8 = con.createStatement();
            res8 = stmt8.executeQuery(
                    "select distinct(dostepnosc) from MENU_PIZZA"
            );
        } catch (Exception e) {
        }
        try {
            if (combobox_skladniki.getItemCount() == 0) {
                combobox_skladniki.addItem("");
                while (res4.next()) {
                    combobox_skladniki.addItem(res4.getString("nazwa"));
                }
            }
            if (POLECIASTO.getItemCount() == 0) {
                POLECIASTO.addItem("");
                while (res6.next()) {
                    POLECIASTO.addItem(res6.getString("ciasto"));
                }
            }
            if (POLEROZMIAR.getItemCount() == 0) {
                POLEROZMIAR.addItem("");
                while (res7.next()) {
                    POLEROZMIAR.addItem(res7.getString("rozmiar"));
                }
            }
            if (POLEDOST.getItemCount() == 0) {
                POLEDOST.addItem("");
                while (res8.next()) {
                    POLEDOST.addItem(res8.getString("dostepnosc"));
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Brak połączenia z bazą danych");
        }
    }
    void wyczyscdane(){
    pole_ciasto_nowe.setText("");
        pole_dost_nowa.setText("");
        pole_rozm_nowy.setText("");
        combobox_skladniki.removeAllItems();
        POLECIASTO.removeAllItems();
        POLEROZMIAR.removeAllItems();
        POLEDOST.removeAllItems();
        POLECIASTO.setEnabled(true);
        POLEROZMIAR.setEnabled(true);
        POLEDOST.setEnabled(true);
        pole_ciasto_nowe.setVisible(false);
        pole_rozm_nowy.setVisible(false);
        pole_dost_nowa.setVisible(false);
        POLECENA.setText("");
        komunikat.setText("");
        POLENAZWA.setText("");
        nowa_opcja_ciasto.setSelected(false);
        nowa_opcja_rozmiar.setSelected(false);
        nowa_opcja_dostepnosc.setSelected(false);
        model1.removeAllElements();
        lista_skladnikow.setModel(model1);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CENA;
    private javax.swing.JLabel CIASTO;
    private javax.swing.JLabel DOSTEPNOSC;
    private javax.swing.JLabel NAZWA;
    private javax.swing.JLabel NUMER;
    private javax.swing.JTextField POLECENA;
    private javax.swing.JComboBox POLECIASTO;
    private javax.swing.JComboBox POLEDOST;
    private javax.swing.JTextField POLENAZWA;
    private javax.swing.JTextField POLENR;
    private javax.swing.JComboBox POLEROZMIAR;
    private javax.swing.JLabel ROZMIAR;
    private javax.swing.JLabel SKLADNIKI;
    private javax.swing.JButton anuluj;
    private javax.swing.JComboBox combobox_skladniki;
    private javax.swing.JButton dodajdobazy;
    private javax.swing.JButton dodajw;
    private javax.swing.JButton edytuj;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel komunikat;
    private javax.swing.JList lista_skladnikow;
    private javax.swing.JToggleButton nowa_opcja_ciasto;
    private javax.swing.JToggleButton nowa_opcja_dostepnosc;
    private javax.swing.JToggleButton nowa_opcja_rozmiar;
    private javax.swing.JPanel panel_tabelka;
    private javax.swing.JPanel paneledytujdodaj;
    private javax.swing.JTextField pole_ciasto_nowe;
    private javax.swing.JTextField pole_dost_nowa;
    private javax.swing.JTextField pole_rozm_nowy;
    private javax.swing.JToggleButton powrot;
    private javax.swing.JToggleButton przegladaj;
    private javax.swing.JTable tabelka;
    private javax.swing.JButton usun;
    private javax.swing.JButton usunw;
    private javax.swing.JButton wyczysc;
    private javax.swing.JButton zapisz;
    // End of variables declaration//GEN-END:variables
}
